{"hash":"8ace741da7a208f0c8d2cda89204824bb84401a3","fesm2022":[{"exports":["SHAddressType","SHBaseService","SHBloodType","SHDayOfWeek","SHGender","SHHttpMethod","SHLanguage","SHMaritalStatus","SHPKDTOAuditFullState","SHPersonTitle","SHPredefinedPeriod","SHSortOrder","SHTemporalUnit","SHUtils","SHttpClientService","ShBaseComponent"],"facadeModuleId":"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/sh-base.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/utils/sh-utils.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/services/sh-base.service.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/services/sh-http-client.service.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/sh-base.component.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-base.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-authentication.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-user.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-address.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-audit.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-person.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-resource.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/public-api.mjs","/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/sh-base.mjs"],"name":"sh-base","type":"chunk","dynamicImports":[],"fileName":"sh-base.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/common/http":["HttpParams","*"],"@angular/core":["*","Injectable","Component"]},"imports":["@angular/common/http","@angular/core"],"modules":{"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/utils/sh-utils.mjs":{"code":"class SHUtils {\n    static isEmpty(obj) {\n        if (SHUtils.isNull(obj)) {\n            return true;\n        }\n        if (SHUtils.isString(obj) && obj.trim().length === 0) {\n            return true;\n        }\n        if (obj instanceof Map || obj instanceof Set) {\n            return obj.size === 0;\n        }\n        if (Array.isArray(obj) && obj.length === 0) {\n            return true;\n        }\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n    static isNull(obj) {\n        return obj === null || obj === undefined;\n    }\n    static isString(obj) {\n        if (SHUtils.isNull(obj)) {\n            return false;\n        }\n        return typeof obj === 'string' || obj instanceof String;\n    }\n    static notNull(obj, varName) {\n        if (SHUtils.isNull(obj)) {\n            throw new Error((!SHUtils.isEmpty(varName) ? varName : 'The given variable') + ' must not be null.');\n        }\n    }\n    static notEmpty(obj, varName) {\n        if (SHUtils.isEmpty(obj)) {\n            throw new Error((!SHUtils.isEmpty(varName) ? varName : 'The given variable') + ' must not be empty or null.');\n        }\n    }\n    static isMap(obj) {\n        return obj instanceof Map;\n    }\n    static convertMapToObject(map) {\n        if (SHUtils.isNull(map) || !SHUtils.isMap(map)) {\n            throw new Error('map must be a non null instance of Map.');\n        }\n        return Object.fromEntries(map);\n    }\n    static toHttpParameters(obj, fields) {\n        let params = new HttpParams();\n        if (!SHUtils.isEmpty(obj)) {\n            for (const [key, value] of Object.entries(obj)) {\n                let pValue = value;\n                params = params.set(key, pValue);\n            }\n        }\n        if (!SHUtils.isEmpty(fields))\n            params = params.set('fields', fields.join(','));\n        return params;\n    }\n}","originalLength":8053,"removedExports":[],"renderedExports":["SHUtils"],"renderedLength":1852},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/services/sh-base.service.mjs":{"code":"class SHBaseService {\n    httpClientService;\n    resourceName;\n    endpointBase;\n    constructor(httpClientService, endpointBase, resourceName) {\n        this.httpClientService = httpClientService;\n        SHUtils.notEmpty(endpointBase, endpointBase);\n        SHUtils.notEmpty(resourceName, resourceName);\n        this.resourceName = resourceName.trim();\n        this.endpointBase = resourceName.trim();\n    }\n    create(body) {\n        SHUtils.notEmpty(body, this.resourceName);\n        return this.httpClientService.post(this.buildEndpoint(), body);\n    }\n    update(resourceID, fieldValueData) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        SHUtils.notEmpty(fieldValueData, 'fieldValueData');\n        let body = SHUtils.isMap(fieldValueData) ? SHUtils.convertMapToObject(fieldValueData) : fieldValueData;\n        return this.httpClientService.patch(this.buildEndpoint(resourceID), body);\n    }\n    findOneByID(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.get(this.buildEndpoint(resourceID));\n    }\n    retrieve(resourceID) {\n        return this.findOneByID(resourceID);\n    }\n    findF(search, fields) {\n        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search, fields));\n    }\n    find(search) {\n        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search));\n    }\n    search(search) {\n        SHUtils.notEmpty(search, this.resourceName + 'Search');\n        SHUtils.notNull(search.paginationPage, 'search.paginationPage');\n        SHUtils.notNull(search.paginationSize, 'search.paginationSize');\n        // TODO: implement below method\n        // SHUtils.removeNullAndUndefinedEntries(search);\n        // SHUtils.removeEmptyObjectEntries(search);\n        return this.httpClientService.get(this.buildEndpoint('search'), SHUtils.toHttpParameters(search));\n    }\n    setAsDeleted(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.patch(this.buildEndpoint(resourceID));\n    }\n    purge(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.delete(this.buildEndpoint(resourceID));\n    }\n    buildEndpoint(resourceID) {\n        return !SHUtils.isEmpty(resourceID) ? `${this.endpointBase}/${resourceID}` : this.endpointBase;\n    }\n}","originalLength":10429,"removedExports":[],"renderedExports":["SHBaseService"],"renderedLength":2430},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/services/sh-http-client.service.mjs":{"code":"class SHttpClientService {\n    httpClient;\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    get(endpoint, parameters, httpHeaders) {\n        return this.httpClient.get(endpoint, { headers: httpHeaders, params: parameters });\n    }\n    post(endpoint, body, httpHeaders, parameters) {\n        return this.httpClient.post(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    put(endpoint, body, parameters, httpHeaders) {\n        return this.httpClient.put(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    patch(endpoint, body, parameters, httpHeaders) {\n        return this.httpClient.patch(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    delete(endpoint, parameters, httpHeaders) {\n        return this.httpClient.delete(endpoint, { headers: httpHeaders, params: parameters });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.HttpClient }] });","originalLength":5116,"removedExports":[],"renderedExports":["SHttpClientService"],"renderedLength":1429},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/sh-base.component.mjs":{"code":"class ShBaseComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ShBaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.8\", type: ShBaseComponent, isStandalone: true, selector: \"lib-sh-base\", ngImport: i0, template: `\n    <p>\n      sh-base works!\n    </p>\n  `, isInline: true, styles: [\"\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ShBaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-sh-base', standalone: true, imports: [], template: `\n    <p>\n      sh-base works!\n    </p>\n  ` }]\n        }] });","originalLength":1674,"removedExports":[],"renderedExports":["ShBaseComponent"],"renderedLength":752},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-base.mjs":{"code":"var SHSortOrder;\n(function (SHSortOrder) {\n    SHSortOrder[\"ASC\"] = \"asc\";\n    SHSortOrder[\"DESC\"] = \"desc\";\n})(SHSortOrder || (SHSortOrder = {}));\nvar SHPredefinedPeriod;\n(function (SHPredefinedPeriod) {\n    SHPredefinedPeriod[\"TODAY\"] = \"today\";\n    SHPredefinedPeriod[\"YESTERDAY\"] = \"yesterday\";\n    SHPredefinedPeriod[\"THIS_WEEK\"] = \"thisWeek\";\n    SHPredefinedPeriod[\"THIS_MONTH\"] = \"thisMonth\";\n    SHPredefinedPeriod[\"THIS_YEAR\"] = \"thisYear\";\n})(SHPredefinedPeriod || (SHPredefinedPeriod = {}));\nvar SHTemporalUnit;\n(function (SHTemporalUnit) {\n    SHTemporalUnit[\"YEARS\"] = \"years\";\n    SHTemporalUnit[\"MONTHS\"] = \"months\";\n    SHTemporalUnit[\"DAYS\"] = \"days\";\n    SHTemporalUnit[\"HOURS\"] = \"hours\";\n    SHTemporalUnit[\"MINUTES\"] = \"minutes\";\n    SHTemporalUnit[\"SECONDS\"] = \"seconds\";\n    SHTemporalUnit[\"MILLI_SECONDS\"] = \"milliSeconds\";\n})(SHTemporalUnit || (SHTemporalUnit = {}));\nvar SHHttpMethod;\n(function (SHHttpMethod) {\n    SHHttpMethod[\"GET\"] = \"GET\";\n    SHHttpMethod[\"POST\"] = \"POST\";\n    SHHttpMethod[\"PUT\"] = \"PUT\";\n    SHHttpMethod[\"DELETE\"] = \"DELETE\";\n    SHHttpMethod[\"PATCH\"] = \"PATCH\";\n})(SHHttpMethod || (SHHttpMethod = {}));\nvar SHLanguage;\n(function (SHLanguage) {\n    SHLanguage[\"ENGLISH\"] = \"en\";\n    SHLanguage[\"FRENCH\"] = \"fr\";\n    SHLanguage[\"SPANISH\"] = \"es\";\n})(SHLanguage || (SHLanguage = {}));\nvar SHDayOfWeek;\n(function (SHDayOfWeek) {\n    SHDayOfWeek[\"MONDAY\"] = \"monday\";\n    SHDayOfWeek[\"TUESDAY\"] = \"tuesday\";\n    SHDayOfWeek[\"WEDNESDAY\"] = \"wednesday\";\n    SHDayOfWeek[\"THURSDAY\"] = \"thursday\";\n    SHDayOfWeek[\"FRIDAY\"] = \"friday\";\n    SHDayOfWeek[\"SATURDAY\"] = \"saturday\";\n    SHDayOfWeek[\"SUNDAY\"] = \"sunday\";\n})(SHDayOfWeek || (SHDayOfWeek = {}));","originalLength":5720,"removedExports":[],"renderedExports":["SHSortOrder","SHPredefinedPeriod","SHTemporalUnit","SHHttpMethod","SHLanguage","SHDayOfWeek"],"renderedLength":1699},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-authentication.mjs":{"code":"","originalLength":889,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-user.mjs":{"code":"","originalLength":1361,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-address.mjs":{"code":"var SHAddressType;\n(function (SHAddressType) {\n    SHAddressType[\"BASIC\"] = \"basic\";\n    SHAddressType[\"STRUCTURED\"] = \"structured\";\n    SHAddressType[\"UNSTRUCTURED\"] = \"unstructured\";\n})(SHAddressType || (SHAddressType = {}));","originalLength":1981,"removedExports":[],"renderedExports":["SHAddressType"],"renderedLength":227},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-audit.mjs":{"code":"var SHPKDTOAuditFullState;\n(function (SHPKDTOAuditFullState) {\n    SHPKDTOAuditFullState[\"ACTIVE\"] = \"active\";\n    SHPKDTOAuditFullState[\"INACTIVE\"] = \"inactive\";\n    SHPKDTOAuditFullState[\"DELETED\"] = \"deleted\";\n})(SHPKDTOAuditFullState || (SHPKDTOAuditFullState = {}));","originalLength":1957,"removedExports":[],"renderedExports":["SHPKDTOAuditFullState"],"renderedLength":271},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-person.mjs":{"code":"var SHPersonTitle;\n(function (SHPersonTitle) {\n    SHPersonTitle[\"MR\"] = \"mr\";\n    SHPersonTitle[\"MRS\"] = \"mrs\";\n    SHPersonTitle[\"MISS\"] = \"miss\";\n    SHPersonTitle[\"DR\"] = \"dr\";\n    SHPersonTitle[\"PR\"] = \"pr\";\n    SHPersonTitle[\"NA\"] = \"na\";\n})(SHPersonTitle || (SHPersonTitle = {}));\nvar SHGender;\n(function (SHGender) {\n    SHGender[\"NOT_KNOWN\"] = \"notKnown\";\n    SHGender[\"MALE\"] = \"male\";\n    SHGender[\"FEMALE\"] = \"female\";\n    SHGender[\"NOT_APPLICABLE\"] = \"notApplicable\";\n})(SHGender || (SHGender = {}));\nvar SHBloodType;\n(function (SHBloodType) {\n    SHBloodType[\"O_POSITIVE\"] = \"O+\";\n    SHBloodType[\"O_NEGATIVE\"] = \"O-\";\n    SHBloodType[\"A_POSITIVE\"] = \"A+\";\n    SHBloodType[\"A_NEGATIVE\"] = \"A-\";\n    SHBloodType[\"B_POSITIVE\"] = \"B+\";\n    SHBloodType[\"B_NEGATIVE\"] = \"B-\";\n    SHBloodType[\"AB_POSITIVE\"] = \"AB+\";\n    SHBloodType[\"AB_NEGATIVE\"] = \"AB-\";\n})(SHBloodType || (SHBloodType = {}));\nvar SHMaritalStatus;\n(function (SHMaritalStatus) {\n    SHMaritalStatus[\"SINGLE\"] = \"single\";\n    SHMaritalStatus[\"MARRIED\"] = \"married\";\n    SHMaritalStatus[\"DIVORCED\"] = \"divorced\";\n    SHMaritalStatus[\"WIDOWED\"] = \"widowed\";\n})(SHMaritalStatus || (SHMaritalStatus = {}));","originalLength":3456,"removedExports":[],"renderedExports":["SHPersonTitle","SHGender","SHBloodType","SHMaritalStatus"],"renderedLength":1177},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/lib/domain/sh-resource.mjs":{"code":"","originalLength":677,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of sh-base\n */\n// --- Services ---","originalLength":2084,"removedExports":[],"renderedExports":[],"renderedLength":59},"/Users/iroxs/DEV/training/angular/sh-ng-lib/dist/sh-base/esm2022/sh-base.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":484,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i1 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component } from '@angular/core';\n\nclass SHUtils {\n    static isEmpty(obj) {\n        if (SHUtils.isNull(obj)) {\n            return true;\n        }\n        if (SHUtils.isString(obj) && obj.trim().length === 0) {\n            return true;\n        }\n        if (obj instanceof Map || obj instanceof Set) {\n            return obj.size === 0;\n        }\n        if (Array.isArray(obj) && obj.length === 0) {\n            return true;\n        }\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n    static isNull(obj) {\n        return obj === null || obj === undefined;\n    }\n    static isString(obj) {\n        if (SHUtils.isNull(obj)) {\n            return false;\n        }\n        return typeof obj === 'string' || obj instanceof String;\n    }\n    static notNull(obj, varName) {\n        if (SHUtils.isNull(obj)) {\n            throw new Error((!SHUtils.isEmpty(varName) ? varName : 'The given variable') + ' must not be null.');\n        }\n    }\n    static notEmpty(obj, varName) {\n        if (SHUtils.isEmpty(obj)) {\n            throw new Error((!SHUtils.isEmpty(varName) ? varName : 'The given variable') + ' must not be empty or null.');\n        }\n    }\n    static isMap(obj) {\n        return obj instanceof Map;\n    }\n    static convertMapToObject(map) {\n        if (SHUtils.isNull(map) || !SHUtils.isMap(map)) {\n            throw new Error('map must be a non null instance of Map.');\n        }\n        return Object.fromEntries(map);\n    }\n    static toHttpParameters(obj, fields) {\n        let params = new HttpParams();\n        if (!SHUtils.isEmpty(obj)) {\n            for (const [key, value] of Object.entries(obj)) {\n                let pValue = value;\n                params = params.set(key, pValue);\n            }\n        }\n        if (!SHUtils.isEmpty(fields))\n            params = params.set('fields', fields.join(','));\n        return params;\n    }\n}\n\nclass SHBaseService {\n    httpClientService;\n    resourceName;\n    endpointBase;\n    constructor(httpClientService, endpointBase, resourceName) {\n        this.httpClientService = httpClientService;\n        SHUtils.notEmpty(endpointBase, endpointBase);\n        SHUtils.notEmpty(resourceName, resourceName);\n        this.resourceName = resourceName.trim();\n        this.endpointBase = resourceName.trim();\n    }\n    create(body) {\n        SHUtils.notEmpty(body, this.resourceName);\n        return this.httpClientService.post(this.buildEndpoint(), body);\n    }\n    update(resourceID, fieldValueData) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        SHUtils.notEmpty(fieldValueData, 'fieldValueData');\n        let body = SHUtils.isMap(fieldValueData) ? SHUtils.convertMapToObject(fieldValueData) : fieldValueData;\n        return this.httpClientService.patch(this.buildEndpoint(resourceID), body);\n    }\n    findOneByID(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.get(this.buildEndpoint(resourceID));\n    }\n    retrieve(resourceID) {\n        return this.findOneByID(resourceID);\n    }\n    findF(search, fields) {\n        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search, fields));\n    }\n    find(search) {\n        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search));\n    }\n    search(search) {\n        SHUtils.notEmpty(search, this.resourceName + 'Search');\n        SHUtils.notNull(search.paginationPage, 'search.paginationPage');\n        SHUtils.notNull(search.paginationSize, 'search.paginationSize');\n        // TODO: implement below method\n        // SHUtils.removeNullAndUndefinedEntries(search);\n        // SHUtils.removeEmptyObjectEntries(search);\n        return this.httpClientService.get(this.buildEndpoint('search'), SHUtils.toHttpParameters(search));\n    }\n    setAsDeleted(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.patch(this.buildEndpoint(resourceID));\n    }\n    purge(resourceID) {\n        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\n        return this.httpClientService.delete(this.buildEndpoint(resourceID));\n    }\n    buildEndpoint(resourceID) {\n        return !SHUtils.isEmpty(resourceID) ? `${this.endpointBase}/${resourceID}` : this.endpointBase;\n    }\n}\n\nclass SHttpClientService {\n    httpClient;\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    get(endpoint, parameters, httpHeaders) {\n        return this.httpClient.get(endpoint, { headers: httpHeaders, params: parameters });\n    }\n    post(endpoint, body, httpHeaders, parameters) {\n        return this.httpClient.post(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    put(endpoint, body, parameters, httpHeaders) {\n        return this.httpClient.put(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    patch(endpoint, body, parameters, httpHeaders) {\n        return this.httpClient.patch(endpoint, body, { headers: httpHeaders, params: parameters });\n    }\n    delete(endpoint, parameters, httpHeaders) {\n        return this.httpClient.delete(endpoint, { headers: httpHeaders, params: parameters });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SHttpClientService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.HttpClient }] });\n\nclass ShBaseComponent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ShBaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.8\", type: ShBaseComponent, isStandalone: true, selector: \"lib-sh-base\", ngImport: i0, template: `\n    <p>\n      sh-base works!\n    </p>\n  `, isInline: true, styles: [\"\"] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ShBaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-sh-base', standalone: true, imports: [], template: `\n    <p>\n      sh-base works!\n    </p>\n  ` }]\n        }] });\n\nvar SHSortOrder;\n(function (SHSortOrder) {\n    SHSortOrder[\"ASC\"] = \"asc\";\n    SHSortOrder[\"DESC\"] = \"desc\";\n})(SHSortOrder || (SHSortOrder = {}));\nvar SHPredefinedPeriod;\n(function (SHPredefinedPeriod) {\n    SHPredefinedPeriod[\"TODAY\"] = \"today\";\n    SHPredefinedPeriod[\"YESTERDAY\"] = \"yesterday\";\n    SHPredefinedPeriod[\"THIS_WEEK\"] = \"thisWeek\";\n    SHPredefinedPeriod[\"THIS_MONTH\"] = \"thisMonth\";\n    SHPredefinedPeriod[\"THIS_YEAR\"] = \"thisYear\";\n})(SHPredefinedPeriod || (SHPredefinedPeriod = {}));\nvar SHTemporalUnit;\n(function (SHTemporalUnit) {\n    SHTemporalUnit[\"YEARS\"] = \"years\";\n    SHTemporalUnit[\"MONTHS\"] = \"months\";\n    SHTemporalUnit[\"DAYS\"] = \"days\";\n    SHTemporalUnit[\"HOURS\"] = \"hours\";\n    SHTemporalUnit[\"MINUTES\"] = \"minutes\";\n    SHTemporalUnit[\"SECONDS\"] = \"seconds\";\n    SHTemporalUnit[\"MILLI_SECONDS\"] = \"milliSeconds\";\n})(SHTemporalUnit || (SHTemporalUnit = {}));\nvar SHHttpMethod;\n(function (SHHttpMethod) {\n    SHHttpMethod[\"GET\"] = \"GET\";\n    SHHttpMethod[\"POST\"] = \"POST\";\n    SHHttpMethod[\"PUT\"] = \"PUT\";\n    SHHttpMethod[\"DELETE\"] = \"DELETE\";\n    SHHttpMethod[\"PATCH\"] = \"PATCH\";\n})(SHHttpMethod || (SHHttpMethod = {}));\nvar SHLanguage;\n(function (SHLanguage) {\n    SHLanguage[\"ENGLISH\"] = \"en\";\n    SHLanguage[\"FRENCH\"] = \"fr\";\n    SHLanguage[\"SPANISH\"] = \"es\";\n})(SHLanguage || (SHLanguage = {}));\nvar SHDayOfWeek;\n(function (SHDayOfWeek) {\n    SHDayOfWeek[\"MONDAY\"] = \"monday\";\n    SHDayOfWeek[\"TUESDAY\"] = \"tuesday\";\n    SHDayOfWeek[\"WEDNESDAY\"] = \"wednesday\";\n    SHDayOfWeek[\"THURSDAY\"] = \"thursday\";\n    SHDayOfWeek[\"FRIDAY\"] = \"friday\";\n    SHDayOfWeek[\"SATURDAY\"] = \"saturday\";\n    SHDayOfWeek[\"SUNDAY\"] = \"sunday\";\n})(SHDayOfWeek || (SHDayOfWeek = {}));\n\nvar SHAddressType;\n(function (SHAddressType) {\n    SHAddressType[\"BASIC\"] = \"basic\";\n    SHAddressType[\"STRUCTURED\"] = \"structured\";\n    SHAddressType[\"UNSTRUCTURED\"] = \"unstructured\";\n})(SHAddressType || (SHAddressType = {}));\n\nvar SHPKDTOAuditFullState;\n(function (SHPKDTOAuditFullState) {\n    SHPKDTOAuditFullState[\"ACTIVE\"] = \"active\";\n    SHPKDTOAuditFullState[\"INACTIVE\"] = \"inactive\";\n    SHPKDTOAuditFullState[\"DELETED\"] = \"deleted\";\n})(SHPKDTOAuditFullState || (SHPKDTOAuditFullState = {}));\n\nvar SHPersonTitle;\n(function (SHPersonTitle) {\n    SHPersonTitle[\"MR\"] = \"mr\";\n    SHPersonTitle[\"MRS\"] = \"mrs\";\n    SHPersonTitle[\"MISS\"] = \"miss\";\n    SHPersonTitle[\"DR\"] = \"dr\";\n    SHPersonTitle[\"PR\"] = \"pr\";\n    SHPersonTitle[\"NA\"] = \"na\";\n})(SHPersonTitle || (SHPersonTitle = {}));\nvar SHGender;\n(function (SHGender) {\n    SHGender[\"NOT_KNOWN\"] = \"notKnown\";\n    SHGender[\"MALE\"] = \"male\";\n    SHGender[\"FEMALE\"] = \"female\";\n    SHGender[\"NOT_APPLICABLE\"] = \"notApplicable\";\n})(SHGender || (SHGender = {}));\nvar SHBloodType;\n(function (SHBloodType) {\n    SHBloodType[\"O_POSITIVE\"] = \"O+\";\n    SHBloodType[\"O_NEGATIVE\"] = \"O-\";\n    SHBloodType[\"A_POSITIVE\"] = \"A+\";\n    SHBloodType[\"A_NEGATIVE\"] = \"A-\";\n    SHBloodType[\"B_POSITIVE\"] = \"B+\";\n    SHBloodType[\"B_NEGATIVE\"] = \"B-\";\n    SHBloodType[\"AB_POSITIVE\"] = \"AB+\";\n    SHBloodType[\"AB_NEGATIVE\"] = \"AB-\";\n})(SHBloodType || (SHBloodType = {}));\nvar SHMaritalStatus;\n(function (SHMaritalStatus) {\n    SHMaritalStatus[\"SINGLE\"] = \"single\";\n    SHMaritalStatus[\"MARRIED\"] = \"married\";\n    SHMaritalStatus[\"DIVORCED\"] = \"divorced\";\n    SHMaritalStatus[\"WIDOWED\"] = \"widowed\";\n})(SHMaritalStatus || (SHMaritalStatus = {}));\n\n/*\n * Public API Surface of sh-base\n */\n// --- Services ---\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SHAddressType, SHBaseService, SHBloodType, SHDayOfWeek, SHGender, SHHttpMethod, SHLanguage, SHMaritalStatus, SHPKDTOAuditFullState, SHPersonTitle, SHPredefinedPeriod, SHSortOrder, SHTemporalUnit, SHUtils, SHttpClientService, ShBaseComponent };\n//# sourceMappingURL=sh-base.mjs.map\n","map":null,"preliminaryFileName":"sh-base.mjs","sourcemapFileName":"sh-base.mjs.map"},{"fileName":"sh-base.mjs.map","needsCodeReference":false,"originalFileName":null,"source":"{\"version\":3,\"file\":\"sh-base.mjs\",\"sources\":[\"../../../projects/sh-base/src/lib/utils/sh-utils.ts\",\"../../../projects/sh-base/src/lib/services/sh-base.service.ts\",\"../../../projects/sh-base/src/lib/services/sh-http-client.service.ts\",\"../../../projects/sh-base/src/lib/sh-base.component.ts\",\"../../../projects/sh-base/src/lib/domain/sh-base.ts\",\"../../../projects/sh-base/src/lib/domain/sh-address.ts\",\"../../../projects/sh-base/src/lib/domain/sh-audit.ts\",\"../../../projects/sh-base/src/lib/domain/sh-person.ts\",\"../../../projects/sh-base/src/public-api.ts\",\"../../../projects/sh-base/src/sh-base.ts\"],\"sourcesContent\":[\"import {HttpParams} from '@angular/common/http';\\r\\rexport class SHUtils {\\r\\r    public static isEmpty(obj: any): boolean {\\r        if (SHUtils.isNull(obj)) {\\r            return true;\\r        }\\r        if (SHUtils.isString(obj) && obj.trim().length === 0) {\\r            return true;\\r        }\\r        if (obj instanceof Map || obj instanceof Set) {\\r            return obj.size === 0;\\r        }\\r        if (Array.isArray(obj) && obj.length === 0) {\\r            return true;\\r        }\\r        return Object.keys(obj).length === 0 && obj.constructor === Object;\\r\\r        }\\r\\r    public static isNull(obj: any): boolean {\\r        return obj === null || obj === undefined;\\r    }\\r\\r    public static isString(obj: any): boolean {\\r        if (SHUtils.isNull(obj)) {\\r            return false;\\r        }\\r        return typeof obj === 'string' || obj instanceof String;\\r    }\\r\\r    public static notNull(obj: any, varName?: string): void {\\r        if (SHUtils.isNull(obj)) {\\r            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be null.');\\r        }\\r    }\\r\\r    public static notEmpty(obj: any, varName?: string): void {\\r        if (SHUtils.isEmpty(obj)) {\\r            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be empty or null.');\\r        }\\r    }\\r\\r    public static isMap(obj: any): boolean {\\r        return obj instanceof Map;\\r    }\\r\\r    public static convertMapToObject(map: Map<any, any>): {} {\\r        if (SHUtils.isNull(map) || !SHUtils.isMap(map)) {\\r            throw new Error('map must be a non null instance of Map.');\\r        }\\r        return Object.fromEntries(map);\\r    }\\r\\r    public static toHttpParameters(obj: any, fields?: string[]): HttpParams {\\r        let params = new HttpParams();\\r        if (!SHUtils.isEmpty(obj)) {\\r            for (const [key, value] of Object.entries(obj!)) {\\r                let pValue: any = value;\\r                params = params.set(key, pValue);\\r            }\\r        }\\r        if (!SHUtils.isEmpty(fields)) params = params.set('fields', fields!.join(','));\\r        return params;\\r    }\\r\\r}\\r\",\"import {Observable} from 'rxjs';\\rimport {SHUtils} from '../utils/sh-utils';\\rimport {SHttpClientService} from './sh-http-client.service';\\rimport {SHPKSearchFilter} from '../domain/sh-resource';\\rimport {SHPKDTO, SHPKDTOAuditFull} from '../domain/sh-audit';\\rimport {SHSearchResult} from '../domain/sh-base';\\r\\rexport class SHBaseService<X extends SHPKDTO , P, S extends SHPKSearchFilter>  {\\r\\r    protected resourceName : string;\\r    protected readonly endpointBase: string;\\r\\r     constructor(protected httpClientService: SHttpClientService, endpointBase: string, resourceName: string) {\\r        SHUtils.notEmpty(endpointBase, endpointBase);\\r        SHUtils.notEmpty(resourceName, resourceName);\\r\\r        this.resourceName = resourceName.trim();\\r        this.endpointBase = resourceName.trim()\\r    }\\r\\r    public create(body: any): Observable<X> {\\r        SHUtils.notEmpty(body, this.resourceName);\\r        return this.httpClientService.post<X>(this.buildEndpoint(), body);\\r    }\\r\\r    public update(resourceID: string, fieldValueData: any): Observable<X> {\\r        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\\r        SHUtils.notEmpty(fieldValueData, 'fieldValueData');\\r        let body = SHUtils.isMap(fieldValueData) ? SHUtils.convertMapToObject(fieldValueData) : fieldValueData;\\r        return this.httpClientService.patch<X>(this.buildEndpoint(resourceID), body);\\r    }\\r\\r    public findOneByID(resourceID: string): Observable<X> {\\r        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\\r        return this.httpClientService.get<X>(this.buildEndpoint(resourceID));\\r    }\\r\\r    public retrieve(resourceID: string): Observable<X> {\\r        return this.findOneByID(resourceID);\\r    }\\r\\r    public findF(search: S, fields: string[]): Observable<any[]> {\\r        return this.httpClientService.get<any[]>(this.buildEndpoint(), SHUtils.toHttpParameters(search, fields));\\r    }\\r\\r    public find(search: S): Observable<P[]> {\\r        return this.httpClientService.get<P[]>(this.buildEndpoint(), SHUtils.toHttpParameters(search));\\r    }\\r\\r    public search(search: S): Observable<SHSearchResult<P>> {\\r        SHUtils.notEmpty(search, this.resourceName + 'Search');\\r        SHUtils.notNull(search.paginationPage, 'search.paginationPage');\\r        SHUtils.notNull(search.paginationSize, 'search.paginationSize');\\r        // TODO: implement below method\\r        // SHUtils.removeNullAndUndefinedEntries(search);\\r        // SHUtils.removeEmptyObjectEntries(search);\\r        return this.httpClientService.get<SHSearchResult<P>>(this.buildEndpoint('search'), SHUtils.toHttpParameters(search));\\r    }\\r\\r    public setAsDeleted(resourceID: string): Observable<SHPKDTOAuditFull> {\\r        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\\r        return this.httpClientService.patch<SHPKDTOAuditFull>(this.buildEndpoint(resourceID));\\r    }\\r\\r    public purge(resourceID: string): Observable<void> {\\r        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');\\r        return this.httpClientService.delete<void>(this.buildEndpoint(resourceID));\\r    }\\r\\r    private buildEndpoint(resourceID?: string): string {\\r        return !SHUtils.isEmpty(resourceID) ? `${this.endpointBase}/${resourceID}` : this.endpointBase;\\r    }\\r}\\r\\r\",\"import {Injectable} from '@angular/core';\\rimport {Observable} from 'rxjs';\\rimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\\r\\r@Injectable()\\rexport abstract class SHttpClientService {\\r\\r    constructor(protected httpClient: HttpClient) {}\\r\\r    public get<T>(endpoint: string, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\\r        return this.httpClient.get<T>(endpoint, {headers: httpHeaders, params: parameters });\\r    }\\r\\r    public post<T>(endpoint: string, body: any,httpHeaders?: HttpHeaders, parameters?: HttpParams): Observable<T> {\\r        return this.httpClient.post<T>(endpoint, body, {headers: httpHeaders, params: parameters });\\r    }\\r\\r    public put<T>(endpoint: string, body: any, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\\r        return this.httpClient.put<T>(endpoint, body, {headers: httpHeaders, params: parameters });\\r    }\\r\\r    public patch<T>(endpoint: string, body?: any, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\\r        return this.httpClient.patch<T>(endpoint, body, {headers: httpHeaders, params: parameters });\\r    }\\r\\r    public delete<T>(endpoint: string, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\\r        return this.httpClient.delete<T>(endpoint, { headers: httpHeaders, params: parameters });\\r    }\\r}\\r\",\"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'lib-sh-base',\\n  standalone: true,\\n  imports: [],\\n  template: `\\n    <p>\\n      sh-base works!\\n    </p>\\n  `,\\n  styles: ``\\n})\\nexport class ShBaseComponent {\\n\\n}\\n\",\"export enum SHSortOrder {\\r    ASC = 'asc',\\r    DESC = 'desc'\\r}\\r\\rexport interface SHPagination {\\r    page: number;\\r    size: number;\\r}\\r\\rexport interface SHSortItem {\\r    field: string;\\r    order: SHSortOrder;\\r}\\r\\rexport interface SHSort {\\r    by: SHSortItem[];\\r}\\r\\rexport interface SHAudit {\\r    createdOn?: string;\\r    createdBy?: any;\\r    updatedOn?: string;\\r    updatedBy?: any;\\r}\\r\\rexport enum SHPredefinedPeriod {\\r    TODAY = 'today',\\r    YESTERDAY = 'yesterday',\\r    THIS_WEEK = 'thisWeek',\\r    THIS_MONTH = 'thisMonth',\\r    THIS_YEAR = 'thisYear'\\r}\\r\\rexport interface SHTemporal {\\r    years?: number;\\r    months?: number;\\r    days?: number;\\r    hours?: number;\\r    minutes?: number;\\r    seconds?: number;\\r    milliSeconds?: number;\\r}\\r\\rexport enum SHTemporalUnit {\\r    YEARS = 'years',\\r    MONTHS = 'months',\\r    DAYS = 'days',\\r    HOURS = 'hours',\\r    MINUTES = 'minutes',\\r    SECONDS = 'seconds',\\r    MILLI_SECONDS = 'milliSeconds'\\r}\\r\\rexport enum SHHttpMethod {\\r    GET = 'GET',\\r    POST = 'POST',\\r    PUT = 'PUT',\\r    DELETE = 'DELETE',\\r    PATCH = 'PATCH'\\r}\\r\\rexport type SHTranslatableString = Partial<Record<SHLanguage, string>>;\\r\\rexport enum SHLanguage {\\r    ENGLISH = 'en',\\r    FRENCH = 'fr',\\r    SPANISH = 'es'\\r}\\r\\rexport enum SHDayOfWeek  {\\r    MONDAY = 'monday',\\r    TUESDAY = 'tuesday',\\r    WEDNESDAY = 'wednesday',\\r    THURSDAY = 'thursday',\\r    FRIDAY = 'friday',\\r    SATURDAY = 'saturday',\\r    SUNDAY = 'sunday'\\r}\\rexport type SHDayOfWeekStr = 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';\\r\\rexport interface SHSearchResult<T> {\\r    total: number;\\r    data: T[];\\r    pagination?: SHPagination;\\r}\\r\\rexport interface SHPagination {\\r    page: number;\\r    size: number;\\r}\\r\",\"\\nexport interface SHProvince {\\n    name: string;\\n    code?: string;\\n}\\n\\nexport interface SHCoordinate {\\n    latitude: number;\\n    longitude: number;\\n}\\n\\nexport interface SHAddressStructured extends SHAddress {\\n    type: SHAddressType.STRUCTURED;\\n    line1: string;\\n    line2?: string;\\n    postalCode?: string;\\n    province?: SHProvince;\\n}\\n\\nexport interface SHAddressUnstructured extends SHAddress {\\n    type: SHAddressType.UNSTRUCTURED;\\n    line1: string;\\n    line2?: string;\\n    line3?: string;\\n}\\n\\nexport interface SHAddressBasic extends SHAddress {\\n    type: SHAddressType.BASIC;\\n}\\n\\nexport interface SHAddress {\\n    title?: string;\\n    subtitle?: string;\\n    type: SHAddressType;\\n    countryISO: string;\\n    city: string;\\n    continentCode?: string;\\n    coordinate?: SHCoordinate;\\n    placeID?: string;\\n}\\n\\nexport enum SHAddressType {\\n    BASIC = 'basic',\\n    STRUCTURED = 'structured',\\n    UNSTRUCTURED = 'unstructured'\\n}\\n\",\"export enum SHPKDTOAuditFullState {\\r    ACTIVE = 'active',\\r    INACTIVE = 'inactive',\\r    DELETED = 'deleted'\\r}\\r\\rexport interface SHPKDTOAuditFull<T = any> extends SHPKDTOAuditUpdated<T> {\\r    state: SHPKDTOAuditFullState;\\r    active?: boolean;\\r    activeUpdatedOn?: string;\\r    activeUpdatedBy?: T;\\r    deleted?: boolean;\\r    deletedOn?: string;\\r    deletedBy?: T;\\r    restoredOn?: string;\\r    restoredBy?: T;\\r}\\r\\rexport interface SHPKDTOAuditUpdated<T = any> extends SHPKDTOAuditCreated<T> {\\r    updatedBy?: T;\\r    updatedOn?: string;\\r}\\r\\rexport interface SHPKDTOAuditUpdatedOn extends SHPKDTOAuditCreatedOn {\\r    updatedOn?: string;\\r}\\r\\rexport interface SHPKDTOAuditCreatedOn extends SHPKDTO {\\r    createdOn: string;\\r}\\r\\rexport interface SHPKDTOAuditCreated<T = any> extends SHPKDTO {\\r    createdBy: T;\\r    createdOn: string;\\r}\\r\\rexport interface SHPKDTO {\\r    id: string;\\r}\\r\",\"export enum SHPersonTitle {\\n\\tMR = 'mr', // Monsieur\\n\\tMRS = 'mrs', // Madame\\n\\tMISS = 'miss', // Mademoiselle\\n\\tDR = 'dr', // Docteur\\n\\tPR = 'pr', // Professeur\\n\\tNA = 'na', // Non Applicable\\n}\\n\\nexport enum SHGender {\\n\\tNOT_KNOWN = 'notKnown',\\n\\tMALE = 'male',\\n\\tFEMALE = 'female',\\n\\tNOT_APPLICABLE = 'notApplicable',\\n}\\n\\nexport enum SHBloodType {\\n\\tO_POSITIVE = 'O+',\\n\\tO_NEGATIVE = 'O-',\\n\\tA_POSITIVE = 'A+',\\n\\tA_NEGATIVE = 'A-',\\n\\tB_POSITIVE = 'B+',\\n\\tB_NEGATIVE = 'B-',\\n\\tAB_POSITIVE = 'AB+',\\n\\tAB_NEGATIVE = 'AB-',\\n}\\n\\nexport enum SHMaritalStatus {\\n\\tSINGLE = 'single',\\n\\tMARRIED = 'married',\\n\\tDIVORCED = 'divorced',\\n\\tWIDOWED = 'widowed',\\n}\\n\\nexport interface SHPersonName {\\n\\tfirstName: string;\\n\\tlastName: string;\\n\\ttitle?: SHPersonTitle;\\n}\\n\",\"/*\\n * Public API Surface of sh-base\\n */\\n\\n// --- Services ---\\nexport * from './lib/services/sh-base.service';\\nexport * from './lib/services/sh-http-client.service';\\n\\n// --- Components ---\\nexport * from './lib/sh-base.component';\\n\\n// --- Domains ---\\nexport * from './lib/domain/sh-base';\\nexport * from './lib/domain/sh-authentication';\\nexport * from './lib/domain/sh-user';\\nexport * from './lib/domain/sh-address';\\nexport * from './lib/domain/sh-audit';\\nexport * from './lib/domain/sh-person';\\nexport * from './lib/domain/sh-resource';\\n\\n// --- Utils ---\\nexport * from './lib/utils/sh-utils';\\n\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}