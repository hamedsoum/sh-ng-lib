import { SHUtils } from '../utils/sh-utils';
export class SHBaseService {
    httpClientService;
    resourceName;
    endpointBase;
    constructor(httpClientService, endpointBase, resourceName) {
        this.httpClientService = httpClientService;
        SHUtils.notEmpty(endpointBase, endpointBase);
        SHUtils.notEmpty(resourceName, resourceName);
        this.resourceName = resourceName.trim();
        this.endpointBase = resourceName.trim();
    }
    create(body) {
        SHUtils.notEmpty(body, this.resourceName);
        return this.httpClientService.post(this.buildEndpoint(), body);
    }
    update(resourceID, fieldValueData) {
        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');
        SHUtils.notEmpty(fieldValueData, 'fieldValueData');
        let body = SHUtils.isMap(fieldValueData) ? SHUtils.convertMapToObject(fieldValueData) : fieldValueData;
        return this.httpClientService.patch(this.buildEndpoint(resourceID), body);
    }
    findOneByID(resourceID) {
        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');
        return this.httpClientService.get(this.buildEndpoint(resourceID));
    }
    retrieve(resourceID) {
        return this.findOneByID(resourceID);
    }
    findF(search, fields) {
        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search, fields));
    }
    find(search) {
        return this.httpClientService.get(this.buildEndpoint(), SHUtils.toHttpParameters(search));
    }
    search(search) {
        SHUtils.notEmpty(search, this.resourceName + 'Search');
        SHUtils.notNull(search.paginationPage, 'search.paginationPage');
        SHUtils.notNull(search.paginationSize, 'search.paginationSize');
        // TODO: implement below method
        // SHUtils.removeNullAndUndefinedEntries(search);
        // SHUtils.removeEmptyObjectEntries(search);
        return this.httpClientService.get(this.buildEndpoint('search'), SHUtils.toHttpParameters(search));
    }
    setAsDeleted(resourceID) {
        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');
        return this.httpClientService.patch(this.buildEndpoint(resourceID));
    }
    purge(resourceID) {
        SHUtils.notEmpty(resourceID, this.resourceName + 'ID');
        return this.httpClientService.delete(this.buildEndpoint(resourceID));
    }
    buildEndpoint(resourceID) {
        return !SHUtils.isEmpty(resourceID) ? `${this.endpointBase}/${resourceID}` : this.endpointBase;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtYmFzZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2gtYmFzZS9zcmMvbGliL3NlcnZpY2VzL3NoLWJhc2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFNMUMsTUFBTSxPQUFPLGFBQWE7SUFLQztJQUhiLFlBQVksQ0FBVTtJQUNiLFlBQVksQ0FBUztJQUV2QyxZQUFzQixpQkFBcUMsRUFBRSxZQUFvQixFQUFFLFlBQW9CO1FBQWpGLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBb0I7UUFDeEQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUE7SUFDM0MsQ0FBQztJQUVNLE1BQU0sQ0FBQyxJQUFTO1FBQ25CLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMxQyxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFTSxNQUFNLENBQUMsVUFBa0IsRUFBRSxjQUFtQjtRQUNqRCxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3ZELE9BQU8sQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDbkQsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUM7UUFDdkcsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakYsQ0FBQztJQUVNLFdBQVcsQ0FBQyxVQUFrQjtRQUNqQyxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVNLFFBQVEsQ0FBQyxVQUFrQjtRQUM5QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLEtBQUssQ0FBQyxNQUFTLEVBQUUsTUFBZ0I7UUFDcEMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFRLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDN0csQ0FBQztJQUVNLElBQUksQ0FBQyxNQUFTO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBTSxJQUFJLENBQUMsYUFBYSxFQUFFLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDbkcsQ0FBQztJQUVNLE1BQU0sQ0FBQyxNQUFTO1FBQ25CLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxZQUFZLEdBQUcsUUFBUSxDQUFDLENBQUM7UUFDdkQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDaEUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDaEUsK0JBQStCO1FBQy9CLGlEQUFpRDtRQUNqRCw0Q0FBNEM7UUFDNUMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFvQixJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3pILENBQUM7SUFFTSxZQUFZLENBQUMsVUFBa0I7UUFDbEMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsQ0FBQztRQUN2RCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQW1CLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUMxRixDQUFDO0lBRU0sS0FBSyxDQUFDLFVBQWtCO1FBQzNCLE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDdkQsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBRU8sYUFBYSxDQUFDLFVBQW1CO1FBQ3JDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLElBQUksVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDbkcsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztccmltcG9ydCB7U0hVdGlsc30gZnJvbSAnLi4vdXRpbHMvc2gtdXRpbHMnO1xyaW1wb3J0IHtTSHR0cENsaWVudFNlcnZpY2V9IGZyb20gJy4vc2gtaHR0cC1jbGllbnQuc2VydmljZSc7XHJpbXBvcnQge1NIUEtTZWFyY2hGaWx0ZXJ9IGZyb20gJy4uL2RvbWFpbi9zaC1yZXNvdXJjZSc7XHJpbXBvcnQge1NIUEtEVE8sIFNIUEtEVE9BdWRpdEZ1bGx9IGZyb20gJy4uL2RvbWFpbi9zaC1hdWRpdCc7XHJpbXBvcnQge1NIU2VhcmNoUmVzdWx0fSBmcm9tICcuLi9kb21haW4vc2gtYmFzZSc7XHJccmV4cG9ydCBjbGFzcyBTSEJhc2VTZXJ2aWNlPFggZXh0ZW5kcyBTSFBLRFRPICwgUCwgUyBleHRlbmRzIFNIUEtTZWFyY2hGaWx0ZXI+ICB7XHJcciAgICBwcm90ZWN0ZWQgcmVzb3VyY2VOYW1lIDogc3RyaW5nO1xyICAgIHByb3RlY3RlZCByZWFkb25seSBlbmRwb2ludEJhc2U6IHN0cmluZztcclxyICAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaHR0cENsaWVudFNlcnZpY2U6IFNIdHRwQ2xpZW50U2VydmljZSwgZW5kcG9pbnRCYXNlOiBzdHJpbmcsIHJlc291cmNlTmFtZTogc3RyaW5nKSB7XHIgICAgICAgIFNIVXRpbHMubm90RW1wdHkoZW5kcG9pbnRCYXNlLCBlbmRwb2ludEJhc2UpO1xyICAgICAgICBTSFV0aWxzLm5vdEVtcHR5KHJlc291cmNlTmFtZSwgcmVzb3VyY2VOYW1lKTtcclxyICAgICAgICB0aGlzLnJlc291cmNlTmFtZSA9IHJlc291cmNlTmFtZS50cmltKCk7XHIgICAgICAgIHRoaXMuZW5kcG9pbnRCYXNlID0gcmVzb3VyY2VOYW1lLnRyaW0oKVxyICAgIH1cclxyICAgIHB1YmxpYyBjcmVhdGUoYm9keTogYW55KTogT2JzZXJ2YWJsZTxYPiB7XHIgICAgICAgIFNIVXRpbHMubm90RW1wdHkoYm9keSwgdGhpcy5yZXNvdXJjZU5hbWUpO1xyICAgICAgICByZXR1cm4gdGhpcy5odHRwQ2xpZW50U2VydmljZS5wb3N0PFg+KHRoaXMuYnVpbGRFbmRwb2ludCgpLCBib2R5KTtcciAgICB9XHJcciAgICBwdWJsaWMgdXBkYXRlKHJlc291cmNlSUQ6IHN0cmluZywgZmllbGRWYWx1ZURhdGE6IGFueSk6IE9ic2VydmFibGU8WD4ge1xyICAgICAgICBTSFV0aWxzLm5vdEVtcHR5KHJlc291cmNlSUQsIHRoaXMucmVzb3VyY2VOYW1lICsgJ0lEJyk7XHIgICAgICAgIFNIVXRpbHMubm90RW1wdHkoZmllbGRWYWx1ZURhdGEsICdmaWVsZFZhbHVlRGF0YScpO1xyICAgICAgICBsZXQgYm9keSA9IFNIVXRpbHMuaXNNYXAoZmllbGRWYWx1ZURhdGEpID8gU0hVdGlscy5jb252ZXJ0TWFwVG9PYmplY3QoZmllbGRWYWx1ZURhdGEpIDogZmllbGRWYWx1ZURhdGE7XHIgICAgICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnRTZXJ2aWNlLnBhdGNoPFg+KHRoaXMuYnVpbGRFbmRwb2ludChyZXNvdXJjZUlEKSwgYm9keSk7XHIgICAgfVxyXHIgICAgcHVibGljIGZpbmRPbmVCeUlEKHJlc291cmNlSUQ6IHN0cmluZyk6IE9ic2VydmFibGU8WD4ge1xyICAgICAgICBTSFV0aWxzLm5vdEVtcHR5KHJlc291cmNlSUQsIHRoaXMucmVzb3VyY2VOYW1lICsgJ0lEJyk7XHIgICAgICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnRTZXJ2aWNlLmdldDxYPih0aGlzLmJ1aWxkRW5kcG9pbnQocmVzb3VyY2VJRCkpO1xyICAgIH1cclxyICAgIHB1YmxpYyByZXRyaWV2ZShyZXNvdXJjZUlEOiBzdHJpbmcpOiBPYnNlcnZhYmxlPFg+IHtcciAgICAgICAgcmV0dXJuIHRoaXMuZmluZE9uZUJ5SUQocmVzb3VyY2VJRCk7XHIgICAgfVxyXHIgICAgcHVibGljIGZpbmRGKHNlYXJjaDogUywgZmllbGRzOiBzdHJpbmdbXSk6IE9ic2VydmFibGU8YW55W10+IHtcciAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudFNlcnZpY2UuZ2V0PGFueVtdPih0aGlzLmJ1aWxkRW5kcG9pbnQoKSwgU0hVdGlscy50b0h0dHBQYXJhbWV0ZXJzKHNlYXJjaCwgZmllbGRzKSk7XHIgICAgfVxyXHIgICAgcHVibGljIGZpbmQoc2VhcmNoOiBTKTogT2JzZXJ2YWJsZTxQW10+IHtcciAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudFNlcnZpY2UuZ2V0PFBbXT4odGhpcy5idWlsZEVuZHBvaW50KCksIFNIVXRpbHMudG9IdHRwUGFyYW1ldGVycyhzZWFyY2gpKTtcciAgICB9XHJcciAgICBwdWJsaWMgc2VhcmNoKHNlYXJjaDogUyk6IE9ic2VydmFibGU8U0hTZWFyY2hSZXN1bHQ8UD4+IHtcciAgICAgICAgU0hVdGlscy5ub3RFbXB0eShzZWFyY2gsIHRoaXMucmVzb3VyY2VOYW1lICsgJ1NlYXJjaCcpO1xyICAgICAgICBTSFV0aWxzLm5vdE51bGwoc2VhcmNoLnBhZ2luYXRpb25QYWdlLCAnc2VhcmNoLnBhZ2luYXRpb25QYWdlJyk7XHIgICAgICAgIFNIVXRpbHMubm90TnVsbChzZWFyY2gucGFnaW5hdGlvblNpemUsICdzZWFyY2gucGFnaW5hdGlvblNpemUnKTtcciAgICAgICAgLy8gVE9ETzogaW1wbGVtZW50IGJlbG93IG1ldGhvZFxyICAgICAgICAvLyBTSFV0aWxzLnJlbW92ZU51bGxBbmRVbmRlZmluZWRFbnRyaWVzKHNlYXJjaCk7XHIgICAgICAgIC8vIFNIVXRpbHMucmVtb3ZlRW1wdHlPYmplY3RFbnRyaWVzKHNlYXJjaCk7XHIgICAgICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnRTZXJ2aWNlLmdldDxTSFNlYXJjaFJlc3VsdDxQPj4odGhpcy5idWlsZEVuZHBvaW50KCdzZWFyY2gnKSwgU0hVdGlscy50b0h0dHBQYXJhbWV0ZXJzKHNlYXJjaCkpO1xyICAgIH1cclxyICAgIHB1YmxpYyBzZXRBc0RlbGV0ZWQocmVzb3VyY2VJRDogc3RyaW5nKTogT2JzZXJ2YWJsZTxTSFBLRFRPQXVkaXRGdWxsPiB7XHIgICAgICAgIFNIVXRpbHMubm90RW1wdHkocmVzb3VyY2VJRCwgdGhpcy5yZXNvdXJjZU5hbWUgKyAnSUQnKTtcciAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudFNlcnZpY2UucGF0Y2g8U0hQS0RUT0F1ZGl0RnVsbD4odGhpcy5idWlsZEVuZHBvaW50KHJlc291cmNlSUQpKTtcciAgICB9XHJcciAgICBwdWJsaWMgcHVyZ2UocmVzb3VyY2VJRDogc3RyaW5nKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHIgICAgICAgIFNIVXRpbHMubm90RW1wdHkocmVzb3VyY2VJRCwgdGhpcy5yZXNvdXJjZU5hbWUgKyAnSUQnKTtcciAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudFNlcnZpY2UuZGVsZXRlPHZvaWQ+KHRoaXMuYnVpbGRFbmRwb2ludChyZXNvdXJjZUlEKSk7XHIgICAgfVxyXHIgICAgcHJpdmF0ZSBidWlsZEVuZHBvaW50KHJlc291cmNlSUQ/OiBzdHJpbmcpOiBzdHJpbmcge1xyICAgICAgICByZXR1cm4gIVNIVXRpbHMuaXNFbXB0eShyZXNvdXJjZUlEKSA/IGAke3RoaXMuZW5kcG9pbnRCYXNlfS8ke3Jlc291cmNlSUR9YCA6IHRoaXMuZW5kcG9pbnRCYXNlO1xyICAgIH1ccn1cclxyIl19