{"version":3,"file":"sh-base.mjs","sources":["../../../projects/sh-base/src/lib/services/sh-base.service.ts","../../../projects/sh-base/src/lib/utils/sh-utils.ts","../../../projects/sh-base/src/lib/services/sh-http-client.service.ts","../../../projects/sh-base/src/lib/sh-base.component.ts","../../../projects/sh-base/src/lib/domain/sh-base.ts","../../../projects/sh-base/src/lib/domain/sh-address.ts","../../../projects/sh-base/src/lib/domain/sh-audit.ts","../../../projects/sh-base/src/lib/domain/sh-person.ts","../../../projects/sh-base/src/public-api.ts","../../../projects/sh-base/src/sh-base.ts"],"sourcesContent":["import {Observable} from 'rxjs';\rimport {SHPKSearchFilter} from '../domain/sh-resource';\rimport {SHPKDTO, SHPKDTOAuditFull} from '../domain/sh-audit';\rimport {SHSearchResult} from '../domain/sh-base';\r\rexport abstract class SHBaseService<X extends SHPKDTO , P, S extends SHPKSearchFilter>  {\r\r    public abstract create(body: any): Observable<X>;\r    public abstract update(resourceID: string, fieldValueData: any): Observable<X>;\r    public abstract retrieve(resourceID: string): Observable<X>;\r    public abstract find(search: S): Observable<P[]>;\r    public abstract search(search: S): Observable<SHSearchResult<P>>;\r    public abstract setAsDeleted(resourceID: string): Observable<SHPKDTOAuditFull>;\r    public abstract purge(resourceID: string): Observable<void>;\r}\r\r","import {HttpParams} from '@angular/common/http';\r\rexport class SHUtils {\r\r    public static isEmpty(obj: any): boolean {\r        if (SHUtils.isNull(obj)) {\r            return true;\r        }\r        if (SHUtils.isString(obj) && obj.trim().length === 0) {\r            return true;\r        }\r        if (obj instanceof Map || obj instanceof Set) {\r            return obj.size === 0;\r        }\r        if (Array.isArray(obj) && obj.length === 0) {\r            return true;\r        }\r        return Object.keys(obj).length === 0 && obj.constructor === Object;\r\r        }\r\r    public static isNull(obj: any): boolean {\r        return obj === null || obj === undefined;\r    }\r\r    public static isString(obj: any): boolean {\r        if (SHUtils.isNull(obj)) {\r            return false;\r        }\r        return typeof obj === 'string' || obj instanceof String;\r    }\r\r    public static notNull(obj: any, varName?: string): void {\r        if (SHUtils.isNull(obj)) {\r            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be null.');\r        }\r    }\r\r    public static notEmpty(obj: any, varName?: string): void {\r        if (SHUtils.isEmpty(obj)) {\r            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be empty or null.');\r        }\r    }\r\r    public static isMap(obj: any): boolean {\r        return obj instanceof Map;\r    }\r\r    public static convertMapToObject(map: Map<any, any>): {} {\r        if (SHUtils.isNull(map) || !SHUtils.isMap(map)) {\r            throw new Error('map must be a non null instance of Map.');\r        }\r        return Object.fromEntries(map);\r    }\r\r    public static toHttpParameters(obj: any, fields?: string[]): HttpParams {\r        let params = new HttpParams();\r        if (!SHUtils.isEmpty(obj)) {\r            for (const [key, value] of Object.entries(obj!)) {\r                let pValue: any = value;\r                params = params.set(key, pValue);\r            }\r        }\r        if (!SHUtils.isEmpty(fields)) params = params.set('fields', fields!.join(','));\r        return params;\r    }\r\r}\r","import {Injectable} from '@angular/core';\rimport {Observable} from 'rxjs';\rimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\rimport {SHUtils} from '../utils/sh-utils';\r\r@Injectable()\rexport abstract class SHttpClientService {\r\r    apiBaseURL : string;\r\r    constructor(protected httpClient: HttpClient, apiBaseURL: string) {\r        SHUtils.notEmpty(apiBaseURL, \"apiBaseURL\");\r        this.apiBaseURL = apiBaseURL.trim();\r    }\r\r    public get<T>(endpoint: string, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\r        return this.httpClient.get<T>(endpoint, {headers: httpHeaders, params: parameters });\r    }\r\r    public post<T>(endpoint: string, body: any,httpHeaders?: HttpHeaders, parameters?: HttpParams): Observable<T> {\r        return this.httpClient.post<T>(endpoint, body, {headers: httpHeaders, params: parameters });\r    }\r\r    public put<T>(endpoint: string, body: any, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\r        return this.httpClient.put<T>(endpoint, body, {headers: httpHeaders, params: parameters });\r    }\r\r    public patch<T>(endpoint: string, body?: any, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\r        return this.httpClient.patch<T>(endpoint, body, {headers: httpHeaders, params: parameters });\r    }\r\r    public delete<T>(endpoint: string, parameters?: HttpParams, httpHeaders?: HttpHeaders): Observable<T> {\r        return this.httpClient.delete<T>(endpoint, { headers: httpHeaders, params: parameters });\r    }\r\r    protected setAPIBaseURL(apiBaseURL: string): void {\r        SHUtils.notEmpty(apiBaseURL, 'apiBaseURL');\r        //TODO:\r        // this.apiBaseURL = XSUtils.removeLastChar(apiBaseURL, '/') + '/';\r        this.apiBaseURL = apiBaseURL;\r    }\r}\r","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-sh-base',\n  standalone: true,\n  imports: [],\n  template: `\n    <p>\n      sh-base works!\n    </p>\n  `,\n  styles: ``\n})\nexport class ShBaseComponent {\n\n}\n","export enum SHSortOrder {\r    ASC = 'asc',\r    DESC = 'desc'\r}\r\rexport interface SHPagination {\r    page: number;\r    size: number;\r}\r\rexport interface SHSortItem {\r    field: string;\r    order: SHSortOrder;\r}\r\rexport interface SHSort {\r    by: SHSortItem[];\r}\r\rexport interface SHAudit {\r    createdOn?: string;\r    createdBy?: any;\r    updatedOn?: string;\r    updatedBy?: any;\r}\r\rexport enum SHPredefinedPeriod {\r    TODAY = 'today',\r    YESTERDAY = 'yesterday',\r    THIS_WEEK = 'thisWeek',\r    THIS_MONTH = 'thisMonth',\r    THIS_YEAR = 'thisYear'\r}\r\rexport interface SHTemporal {\r    years?: number;\r    months?: number;\r    days?: number;\r    hours?: number;\r    minutes?: number;\r    seconds?: number;\r    milliSeconds?: number;\r}\r\rexport enum SHTemporalUnit {\r    YEARS = 'years',\r    MONTHS = 'months',\r    DAYS = 'days',\r    HOURS = 'hours',\r    MINUTES = 'minutes',\r    SECONDS = 'seconds',\r    MILLI_SECONDS = 'milliSeconds'\r}\r\rexport enum SHHttpMethod {\r    GET = 'GET',\r    POST = 'POST',\r    PUT = 'PUT',\r    DELETE = 'DELETE',\r    PATCH = 'PATCH'\r}\r\rexport type SHTranslatableString = Partial<Record<SHLanguage, string>>;\r\rexport enum SHLanguage {\r    ENGLISH = 'en',\r    FRENCH = 'fr',\r    SPANISH = 'es'\r}\r\rexport enum SHDayOfWeek  {\r    MONDAY = 'monday',\r    TUESDAY = 'tuesday',\r    WEDNESDAY = 'wednesday',\r    THURSDAY = 'thursday',\r    FRIDAY = 'friday',\r    SATURDAY = 'saturday',\r    SUNDAY = 'sunday'\r}\rexport type SHDayOfWeekStr = 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';\r\rexport interface SHSearchResult<T> {\r    total: number;\r    data: T[];\r    pagination?: SHPagination;\r}\r\rexport interface SHPagination {\r    page: number;\r    size: number;\r}\r","\nexport interface SHProvince {\n    name: string;\n    code?: string;\n}\n\nexport interface SHCoordinate {\n    latitude: number;\n    longitude: number;\n}\n\nexport interface SHAddressStructured extends SHAddress {\n    type: SHAddressType.STRUCTURED;\n    line1: string;\n    line2?: string;\n    postalCode?: string;\n    province?: SHProvince;\n}\n\nexport interface SHAddressUnstructured extends SHAddress {\n    type: SHAddressType.UNSTRUCTURED;\n    line1: string;\n    line2?: string;\n    line3?: string;\n}\n\nexport interface SHAddressBasic extends SHAddress {\n    type: SHAddressType.BASIC;\n}\n\nexport interface SHAddress {\n    title?: string;\n    subtitle?: string;\n    type: SHAddressType;\n    countryISO: string;\n    city: string;\n    continentCode?: string;\n    coordinate?: SHCoordinate;\n    placeID?: string;\n}\n\nexport enum SHAddressType {\n    BASIC = 'basic',\n    STRUCTURED = 'structured',\n    UNSTRUCTURED = 'unstructured'\n}\n","export enum SHPKDTOAuditFullState {\r    ACTIVE = 'active',\r    INACTIVE = 'inactive',\r    DELETED = 'deleted'\r}\r\rexport interface SHPKDTOAuditFull<T = any> extends SHPKDTOAuditUpdated<T> {\r    state: SHPKDTOAuditFullState;\r    active?: boolean;\r    activeUpdatedOn?: string;\r    activeUpdatedBy?: T;\r    deleted?: boolean;\r    deletedOn?: string;\r    deletedBy?: T;\r    restoredOn?: string;\r    restoredBy?: T;\r}\r\rexport interface SHPKDTOAuditUpdated<T = any> extends SHPKDTOAuditCreated<T> {\r    updatedBy?: T;\r    updatedOn?: string;\r}\r\rexport interface SHPKDTOAuditUpdatedOn extends SHPKDTOAuditCreatedOn {\r    updatedOn?: string;\r}\r\rexport interface SHPKDTOAuditCreatedOn extends SHPKDTO {\r    createdOn: string;\r}\r\rexport interface SHPKDTOAuditCreated<T = any> extends SHPKDTO {\r    createdBy: T;\r    createdOn: string;\r}\r\rexport interface SHPKDTO {\r    id: string;\r}\r","export enum SHPersonTitle {\n\tMR = 'mr', // Monsieur\n\tMRS = 'mrs', // Madame\n\tMISS = 'miss', // Mademoiselle\n\tDR = 'dr', // Docteur\n\tPR = 'pr', // Professeur\n\tNA = 'na', // Non Applicable\n}\n\nexport enum SHGender {\n\tNOT_KNOWN = 'notKnown',\n\tMALE = 'male',\n\tFEMALE = 'female',\n\tNOT_APPLICABLE = 'notApplicable',\n}\n\nexport enum SHBloodType {\n\tO_POSITIVE = 'O+',\n\tO_NEGATIVE = 'O-',\n\tA_POSITIVE = 'A+',\n\tA_NEGATIVE = 'A-',\n\tB_POSITIVE = 'B+',\n\tB_NEGATIVE = 'B-',\n\tAB_POSITIVE = 'AB+',\n\tAB_NEGATIVE = 'AB-',\n}\n\nexport enum SHMaritalStatus {\n\tSINGLE = 'single',\n\tMARRIED = 'married',\n\tDIVORCED = 'divorced',\n\tWIDOWED = 'widowed',\n}\n\nexport interface SHPersonName {\n\tfirstName: string;\n\tlastName: string;\n\ttitle?: SHPersonTitle;\n}\n","/*\n * Public API Surface of sh-base\n */\n\n// --- Services ---\nexport * from './lib/services/sh-base.service';\nexport * from './lib/services/sh-http-client.service';\n\n// --- Components ---\nexport * from './lib/sh-base.component';\n\n// --- Domains ---\nexport * from './lib/domain/sh-base';\nexport * from './lib/domain/sh-authentication';\nexport * from './lib/domain/sh-user';\nexport * from './lib/domain/sh-address';\nexport * from './lib/domain/sh-audit';\nexport * from './lib/domain/sh-person';\nexport * from './lib/domain/sh-resource';\n\n// --- Utils ---\nexport * from './lib/utils/sh-utils';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}