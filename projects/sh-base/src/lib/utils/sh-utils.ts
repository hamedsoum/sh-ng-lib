import {HttpParams} from '@angular/common/http';import {v4 as uuidv4} from 'uuid';export class SHUtils {    public static uuid(): string {        return uuidv4();    }    public static isEmpty(obj: any): boolean {        if (SHUtils.isNull(obj)) {            return true;        }        if (SHUtils.isString(obj) && obj.trim().length === 0) {            return true;        }        if (obj instanceof Map || obj instanceof Set) {            return obj.size === 0;        }        if (Array.isArray(obj) && obj.length === 0) {            return true;        }        return Object.keys(obj).length === 0 && obj.constructor === Object;        }    public static isNull(obj: any): boolean {        return obj === null || obj === undefined;    }    public static isString(obj: any): boolean {        if (SHUtils.isNull(obj)) {            return false;        }        return typeof obj === 'string' || obj instanceof String;    }    public static notNull(obj: any, varName?: string): void {        if (SHUtils.isNull(obj)) {            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be null.');        }    }    public static notEmpty(obj: any, varName?: string): void {        if (SHUtils.isEmpty(obj)) {            throw new Error( (!SHUtils.isEmpty(varName) ?  varName! : 'The given variable') + ' must not be empty or null.');        }    }    public static isMap(obj: any): boolean {        return obj instanceof Map;    }    public static convertMapToObject(map: Map<any, any>): {} {        if (SHUtils.isNull(map) || !SHUtils.isMap(map)) {            throw new Error('map must be a non null instance of Map.');        }        return Object.fromEntries(map);    }    public static toHttpParameters(obj: any, fields?: string[]): HttpParams {        let params = new HttpParams();        if (!SHUtils.isEmpty(obj)) {            for (const [key, value] of Object.entries(obj!)) {                let pValue: any = value;                params = params.set(key, pValue);            }        }        if (!SHUtils.isEmpty(fields)) params = params.set('fields', fields!.join(','));        return params;    }}